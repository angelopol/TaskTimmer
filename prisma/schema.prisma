// Prisma schema
// DB: SQLite (dev)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum TimeLogSource {
  PLANNED
  ADHOC
  MAKEUP
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String            @unique
  passwordHash  String
  activities    Activity[]
  segments      ScheduleSegment[]
  logs          TimeLog[]
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
}

model Activity {
  id                  String            @id @default(cuid())
  user                User              @relation(fields: [userId], references: [id])
  userId              String
  name                String
  color               String?           // hex color
  weeklyTargetMinutes Int               @default(0)
  active              Boolean           @default(true)
  segments            ScheduleSegment[]
  logs                TimeLog[]
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
  @@index([userId, name])
  @@unique([userId, name], name: "userId_name")
}

model ScheduleSegment {
  id             String    @id @default(cuid())
  user           User      @relation(fields: [userId], references: [id])
  userId         String
  activity       Activity? @relation(fields: [activityId], references: [id])
  activityId     String?
  weekday        Int       // 1=Lunes .. 7=Domingo
  startMinute    Int
  endMinute      Int
  notes          String?
  logs           TimeLog[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  @@index([userId, weekday])
}

model TimeLog {
  id               String          @id @default(cuid())
  user             User            @relation(fields: [userId], references: [id])
  userId           String
  activity         Activity?       @relation(fields: [activityId], references: [id])
  activityId       String?
  segment          ScheduleSegment? @relation(fields: [segmentId], references: [id])
  segmentId        String?
  date             DateTime        // store the day (strip time in app logic)
  startedAt        DateTime
  endedAt          DateTime
  minutes          Int
  partial          Boolean         @default(false)
  source           TimeLogSource   @default(PLANNED)
  comment          String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  @@index([userId, date])
  @@index([activityId])
}
